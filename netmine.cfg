
# config version format
version = "1.1";

permissions :
{
   username = "litton";
   group = "litton";
}

logger:
{
   root = "/tmp/logger/";
   max_buffer = 524288000; #will disconnect reader clients if buffer is larger than this, in bytes
};

verbatim:
{
  logpath = "/var/log/connector/"; # You can set up verbatim to work with logrotate, which you probably want.
};

getaddr: {
  # getaddr will reinitiate in the product of hour and minutes list
  # TODO: just copy cron format
  schedule: { # in system local time ...
    hours = ( 0, 4, 8, 12, 16, 20 );
    minutes = ( 15 );
  };
  sampling_rate = .1; # probability of a address in addr of being sampled
};

connector:
{

};

ground_ctrl:
{
   control_path = "/tmp/connector/gc_ctrl"; # control socket where GC multiplexes to children
   child_path = "/tmp/connector/gc_child"; # socket through which new connectors connect to register with GC

   control_listen = 5; # Argument to listen parameter for control sock
   connectors = {
      msg_pool_size = 128; # How many registered messages should be kept


      # addresses to relay in the "active ping". Note: may be a different connector instance. 
      broadcast = ( ( "AF_INET", "127.0.0.1", 8334 ) );
      blacklist = "/etc/netmine/blacklist.txt"; # one ip address per line in ascii

      # What start height should we send in version messages initially
      start_height = 346110;

      magic = 0xD9B4BEF9L;

      max_version = 70002;
      min_version = 209;
      services = 1;
      user_agent = "/Coinscope-GH:0.2/";

      connectors = ( # connectors take their id by their place on this list.
      {
         control_path = "/tmp/connector/connector.0.ctrl";
         bitcoin: {
            # It will listen to the following list of addresses
            # tuples. Note, currently only AF_INET is supported. No check is
            # done to verify that these make sense, other than to try to
            # connect to them. Format is ("family", "ipv4 addr", port,
            # listeners)
            listeners = ( ( "AF_INET", "127.0.0.1", 8334, 128) ); # change to local interface

            
            # How often should each connection be pinged if we've received
            # no activity. 0 means never.
            ping_frequency = 0; 
            active_ping: { # How often should each connection be pinged regardless
                mean = 60.0; # These have to be floating point values
                stddev = 1.0;
            };
         };  
      },
      {
         control_path = "/tmp/connector/connector.1.ctrl";
         bitcoin: {
            # It will listen to the following list of addresses
            # tuples. Note, currently only AF_INET is supported. No check is
            # done to verify that these make sense, other than to try to
            # connect to them. Format is ("family", "ipv4 addr", port,
            # listeners)
            listeners = ( ( "AF_INET", "127.0.0.1", 8334, 128) ); # change to local interface

            
            # How often should each connection be pinged if we've received
            # no activity. 0 means never.
            ping_frequency = 0; 
            active_ping: { # How often should each connection be pinged regardless
                mean = 60.0; # These have to be floating point values
                stddev = 1.0;
            };
         };  
      });
   };
};

